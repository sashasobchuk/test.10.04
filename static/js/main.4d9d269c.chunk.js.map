{"version":3,"sources":["components/addProductItem/addProductItem.module.css","redux/ProductPage_reducer.js","api/api.js","components/editDisplay/editDisplay.jsx","components/OneProductPage/oneProduct.jsx","components/addProductItem/addProductItemDisplay.jsx","components/addProductItem/addProductItem.jsx","components/productPage/ProductPage.jsx","App.js","reportWebVitals.js","redux/redux.js","index.js"],"names":["module","exports","standardFoto","DELETE_COMMENT","ADD_COMMENT","CHANGEITEM","ADD_ITEM","CHANGE_DISPLAY","ADD_ITEM_DISPLAY","PUT_FULL_PAGE","defaultStatus","editDisplay","undefined","addDisplay","products","id","imageUrl","name","count","size","width","height","weight","comments","productId","description","date","deleteComment","itemId","commentId","type","addComment","newId","commentValue","downloadFullPage","dispatch","a","axios","response","status","FullPage","data","console","log","ProductPageReducer","state","action","map","item","filter","comment","nameValue","payload","coments","change","changeAddDisplay","EditDisplay","product","useDispatch","useState","changeimageUrl","changenameValue","changecount","changewidth","changeheight","changeWeight","className","rows","cols","value","onChange","event","currentTarget","onClick","changeItem","OneProduct","commentItputValue","ChangecommentItputValue","useEffect","useSelector","ProductPage","href","src","alt","coment","index","e","changeCommnettHandler","Math","random","toString","substring","style","display","AddProductDIsplay","clas","floor","addItemItem","AddOneProduct","oneItem","ProductName","editBotton","img","properties","commentDate","commentInput","btn_addComment","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","ProductPage_reducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"wJACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,eAAiB,uCAAuC,QAAU,gCAAgC,YAAc,oCAAoC,WAAa,mCAAmC,aAAe,qCAAqC,cAAgB,sCAAsC,YAAc,oCAAoC,QAAU,gCAAgC,WAAa,mCAAmC,eAAiB,uCAAuC,WAAa,qC,sMCCpjBC,EAAY,+EAGnBC,EAAiB,iBACjBC,EAAc,cACdC,EAAa,aACbC,EAAW,WACXC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAgB,gBAEhBC,EAAgB,CAElBC,iBAAYC,EACZC,gBAAWD,EACXE,SAAU,CACN,CACIC,GAAI,EACJC,SAAUd,EACVe,KAAM,eACNC,MAAO,EACPC,KAAM,CACFC,MAAO,IACPC,OAAQ,KAEZC,OAAQ,OACRC,SAAU,CAAC,CACPR,GAAI,GACJS,UAAW,EACXC,YAAa,iBACbC,KAAM,oBAEN,CACIX,GAAI,EACJS,UAAW,EACXC,YAAa,iBACbC,KAAM,wBA0EbC,EAAgB,SAACC,EAAOC,GAAR,MAAuB,CAACC,KAAM3B,EAAgByB,SAAOC,cACrEE,EAAa,SAACC,EAAMJ,EAAOK,EAAaP,GAA3B,MAAqC,CAACI,KAAM1B,EAAY4B,QAAOJ,SAAOK,eAAaP,SAUhGQ,EAAmB,yDAAM,WAAOC,GAAP,eAAAC,EAAA,+ECxH1BC,MAAA,+DAAyE,IDwH/C,UAGF,OADpBC,EAFsB,QAGbC,OAHa,gBAItBJ,GANaK,EAMQF,EAASG,KAAK3B,SANR,CAACgB,KAAMrB,EAAc+B,cAE1B,8BAM1BE,QAAQC,IAAI,yCANc,uBAOnB/B,GAPmB,0DAU9B8B,QAAQC,IAAI,gDAAZ,MAV8B,kCAFV,IAACH,IAES,qBAAN,uDAejBI,EA/FY,WAAoC,IAAnCC,EAAkC,uDAA1BnC,EAAeoC,EAAW,uCAC1D,OAAQA,EAAOhB,MACX,KAAKrB,EAAc,OAAO,2BAAIoC,GAAX,IAAkB/B,SAAS,YAAKgC,EAAON,YAC1D,KAAKrC,EAEA,OAAO,2BAAI0C,GAAX,IAAkB/B,SAAS,YAAK+B,EAAM/B,SAASiC,KAAI,SAAAC,GAAI,OAAIA,EAAKjC,KAAO+B,EAAOlB,OAChEoB,EACA,CAAGjC,GAAIiC,EAAKjC,GACVC,SAAUgC,EAAKhC,SACfC,KAAM+B,EAAK/B,KACXC,MAAO8B,EAAK9B,MACZC,KAAM6B,EAAK7B,KACXG,OAAQ0B,EAAK1B,OACbC,SAAS,YAAKyB,EAAKzB,SAAS0B,QAAO,SAAAC,GAAO,OAAGA,EAAQnC,KAAM+B,EAAOjB,qBAE9E,KAAKzB,EACT,OAAO,2BAAIyC,GAAX,IAAkB/B,SAAS,YAAK+B,EAAM/B,SAASiC,KAAI,SAAAC,GAAI,OAAIA,EAAKjC,KAAO+B,EAAOlB,OAChEoB,EACA,CAAGjC,GAAIiC,EAAKjC,GACVC,SAAUgC,EAAKhC,SACfC,KAAM+B,EAAK/B,KACXC,MAAO8B,EAAK9B,MACZC,KAAM6B,EAAK7B,KACXG,OAAQ0B,EAAK1B,OACbC,SAAS,GAAD,mBAAMyB,EAAKzB,UAAX,CAAoB,CACxBR,GAAI+B,EAAOd,MACXR,UAAWwB,EAAKjC,GAChBU,YAAaqB,EAAOb,aACpBP,KAAMoB,EAAOpB,eAGtC,KAAKrB,EACD,OAAO,2BAAIwC,GAAX,IAAkBlC,iBAAYC,EAAUE,SAAS,YAAK+B,EAAM/B,SAASiC,KAAI,SAAAC,GAAI,OAAIA,EAAKjC,KAAO+B,EAAOlB,OACtFoB,EACA,CAAGjC,GAAIiC,EAAKjC,GACVC,SAAU8B,EAAO9B,SACjBC,KAAM6B,EAAOK,UACbjC,MAAO4B,EAAO5B,MACdC,KAAK,2BAAK6B,EAAK7B,MAAX,IAAiBC,MAAO0B,EAAO1B,MAAMC,OAAOyB,EAAOzB,SACvDC,OAAQwB,EAAOxB,OACfC,SAAS,GAAD,mBAAMyB,EAAKzB,UAAX,CAAoB,CACxBR,GAAI+B,EAAOd,MACXR,UAAWwB,EAAKjC,GAChBU,YAAaqB,EAAOb,aACpBP,KAAMoB,EAAOpB,eAMrC,KAAKpB,EACD,OAAO,2BAAIuC,GAAX,IACIhC,gBAAWD,EACXE,SAAS,GAAD,mBAAM+B,EAAM/B,UAAZ,CACJ,CAACC,GAAI+B,EAAOM,QAAQrC,GACfC,SAAU8B,EAAOM,QAAQpC,SACzBC,KAAM6B,EAAOM,QAAQnC,KACtBC,MAAO4B,EAAOM,QAAQlC,MACtBC,KAAM2B,EAAOM,QAAQjC,KACrBG,OAAQwB,EAAOM,QAAQ9B,OACjBC,SAAS,YAAKuB,EAAOM,QAAQC,cAG/C,KAAK9C,EAAe,OAAO,2BAAIsC,GAAX,IAAkBlC,YAAYmC,EAAOQ,SACzD,KAAK9C,EAAiB,OAAO,2BAAIqC,GAAX,IAAkBhC,WAAWiC,EAAOS,mBAC9D,QACI,OAAOV,I,eElCJW,EAtEK,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZtB,EAAWuB,cADc,EAGIC,mBAASF,EAAQzC,UAHrB,mBAGxBA,EAHwB,KAGd4C,EAHc,OAOCD,mBAASF,EAAQxC,MAPlB,mBAOxBA,EAPwB,KAOlB4C,EAPkB,OAWFF,mBAASF,EAAQvC,OAXf,mBAWxBA,EAXwB,KAWjB4C,EAXiB,OAeFH,mBAASF,EAAQtC,KAAKC,OAfpB,mBAexBA,EAfwB,KAejB2C,EAfiB,OAoBAJ,mBAASF,EAAQtC,KAAKE,QApBtB,mBAoBxBA,EApBwB,KAoBhB2C,EApBgB,OAyBAL,mBAASF,EAAQnC,QAzBjB,mBAyBxBA,EAzBwB,KAyBhB2C,EAzBgB,KAmC/B,OACI,sBAAKC,UAAU,cAAf,UAGI,gCACI,2CADJ,IACuB,0BAAUC,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAOrD,EACtCsD,SAAU,SAAAC,GArCbX,EAqC4CW,EArC3BC,cAAcH,aAuC7D,gCACI,uCADJ,IACmB,0BAAUF,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAOpD,EAClCqD,SAAU,SAAAC,GArCNV,EAqC4CU,EArC1BC,cAAcH,aAuCrE,gCACI,wCADJ,IACoB,0BAAUF,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAOnD,EACnCoD,SAAU,SAAAC,GArChBT,EAqC4CS,EArC9BC,cAAcH,aAuCvD,gCACI,6CADJ,IACyB,0BAAUF,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAOjD,EACjCkD,SAAU,SAAAC,GArCvBR,EAqCmDQ,EArCrCC,cAAcH,aAuCvD,gCACI,8CADJ,IAC0B,0BAAUF,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAOhD,EAClCiD,SAAU,SAAAC,GApCtBP,EAoCmDO,EApCpCC,cAAcH,aAsCzD,gCACI,yCADJ,IACqB,0BAAUF,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAO/C,EAClCgD,SAAU,SAAAC,GAnCjBN,EAmC8CM,EAnC/BC,cAAcH,aAqCjD,8BACI,wBAAQI,QApCH,WAEjBtC,EF+Ec,SAACP,EAAOZ,EAASmC,EAAUjC,EAAME,EAAMC,EAAOC,GAA9C,MAA0D,CAACQ,KAAMzB,EAAYuB,SAAOZ,WAASmC,YAAUjC,QAAME,QAAMC,SAAOC,UE/E/HoD,CAAWjB,EAAQ1C,GAAIC,EAASC,EAAKC,EAAME,EAAMC,EAAOC,KAkCjB4C,UAAU,iBAA9C,gCC4BTS,EA1FI,SAAC,GAAe,IAAdlB,EAAa,EAAbA,QAAa,EAIuBE,mBAAS,IAJhC,mBAIvBiB,EAJuB,KAIJC,EAJI,KAKxB1C,EAAWuB,cAiBjBoB,qBAAU,WACN3C,EAASD,QAEb,IAAOvB,EAAcoE,aAAY,SAAAlC,GAAK,OAAIA,EAAMmC,YAAYrE,eAK5D,OACI,sBAAKuD,UAAU,UAAf,UACI,qBAAKA,UAAU,cAAf,SACI,mCAAMT,EAAQxC,UAElB,uBAAOa,KAAK,SAASoC,UAAU,aAAaO,QATzB,WHoFF,IAACnB,EGnFtBnB,GHmFsBmB,EGnFCG,EAAQ1C,GHmFG,CAACe,KAAMvB,EAAe+C,aG3EsBe,MAAM,WAGhF,mBAAGY,KAAK,YAAR,SACI,qBAAKC,IAA0B,SAArBzB,EAAQzC,SAAqBd,EAAcuD,EAAQzC,SAAUkD,UAAU,MAAMiB,IAAI,OAE/F,sBAAKjB,UAAU,aAAf,UACI,8BACkB,2CACNT,EAAQvC,WAGpB,8BACC,gDACgBuC,EAAQtC,KAAKC,WAI9B,8BACoB,iDACFqC,EAAQtC,KAAKE,YAG/B,8BACA,4CACaoC,EAAQnC,eAMzB,sBAAK4C,UAAU,UAAf,UACKT,EAAQlC,SAASwB,KAAI,SAACqC,EAAOC,GAAR,OAAkB,gCAAiB,sBAAMnB,UAAU,eAAhB,SACpDkB,EAAO3D,cAD4B,IACR,uBAAMyC,UAAU,cAAhB,cAAgCkB,EAAO1D,QACnE,uBAAOwC,UAAU,gBAAgBO,QAAS,kBA1D5B5C,EA0DuDuD,EAAOrE,QAzDxFoB,EAASR,EAAc8B,EAAQ1C,GAAIc,IADvC,IAA8BA,GA0DmEC,KAAK,SAC/EuC,MAAM,QAHiCgB,MAMlD,0BAAUhB,MAAOO,EAAmB9C,KAAK,OAAOwC,SAAU,SAACgB,GAAD,OAlEtE,SAA+BA,GAC3BT,EAAwBS,EAAEd,cAAcH,OAiEiCkB,CAAsBD,IAC7EpB,UAAU,iBAEpB,uBAAOpC,KAAK,SAASuC,MAAM,aAAaI,QA7DpD,WACI,GAAIG,EAAmB,CACnB,IAAM5C,EAAQwD,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACnDxD,EAASJ,EAAWC,EAAOyB,EAAQ1C,GAAI6D,EAAmB,SAC1DC,EAAwB,MAyDgDX,UAAU,mBAC9E,qBAAKA,UAAU,OAAf,SAAsB,+BAAKT,EAAQtC,KAAK,GAAlB,YAGvBR,IAAgB8C,EAAQ1C,IAC3B,qBAAK6E,MAAO,CAACC,QAASlF,GAAtB,SACI,cAAC,EAAD,CAAa8C,QAASA,U,gBCNvBqC,EA9EW,SAAC,GAAe,IAAdrC,EAAa,EAAbA,QAClBtB,EAAWuB,cADoB,EAGFC,mBAASF,EAAQzC,UAHf,mBAG9BA,EAH8B,KAGpB4C,EAHoB,OAOLD,mBAASF,EAAQxC,MAPZ,mBAO9BA,EAP8B,KAOxB4C,EAPwB,OAWRF,mBAASF,EAAQvC,OAXT,mBAW9BA,EAX8B,KAWvB4C,EAXuB,OAeRH,mBAASF,EAAQtC,KAAKC,OAfd,mBAe9BA,EAf8B,KAevB2C,EAfuB,OAoBNJ,mBAASF,EAAQtC,KAAKE,QApBhB,mBAoB9BA,EApB8B,KAoBtB2C,EApBsB,OAyBNL,mBAASF,EAAQnC,QAzBX,mBAyB9BA,EAzB8B,KAyBtB2C,EAzBsB,KA2CrC,OACI,sBAAKC,UAAW6B,IAAKlF,WAArB,uBAGI,gCACI,2CADJ,IACuB,0BAAUsD,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAOrD,EACtCsD,SAAU,SAAAC,GA7CbX,EA6C4CW,EA7C3BC,cAAcH,aA+C7D,gCACI,uCADJ,IACmB,0BAAUF,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAOpD,EACtCqD,SAAU,SAAAC,GA7CFV,EA6CwCU,EA7CtBC,cAAcH,aA+CrE,gCACI,wCADJ,IACoB,0BAAUF,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAOnD,EACtCoD,SAAU,SAAAC,GA7CbT,EA6CyCS,EA7C3BC,cAAcH,aA+CvD,gCACI,6CADJ,IACyB,0BAAUF,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAOjD,EACtCkD,SAAU,SAAAC,GA7ClBR,EA6C8CQ,EA7ChCC,cAAcH,aA+CvD,gCACI,8CADJ,IAC0B,0BAAUF,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAOhD,EACtCiD,SAAU,SAAAC,GA5ClBP,EA4C+CO,EA5ChCC,cAAcH,aA8CzD,gCACI,yCADJ,IACqB,0BAAUF,KAAK,IAAIC,KAAK,KAAKtC,KAAK,OAAOuC,MAAO/C,EACtCgD,SAAU,SAAAC,GA3CbN,EA2C0CM,EA3C3BC,cAAcH,aA6CzD,8BACI,wBAAQI,QA5CK,WACrB,IAAI1D,EAAIyE,KAAKQ,MAAsB,QAAhBR,KAAKC,UASxBtD,EJwEmB,SAACiB,GAAD,MAAc,CAACtB,KAAMxB,EAAU8C,WIxEzC6C,CADG,CAAClF,KAAIC,WAASC,OAAKC,QAAMC,KAP1B,CAACC,QAAMC,UAOwBC,SAAQ+B,QANpC,CAAC,CACXtC,GAAGA,EACHS,UAAUT,EACVU,YAAa,GACbC,KAAM,iBAqCkCwC,UAAU,iBAA9C,gCC0BDgC,EA3FO,SAAC,GAAe,IAAdzC,EAAa,EAAbA,QAAa,EAIoBE,mBAAS,IAJ7B,mBAI1BiB,EAJ0B,KAIPC,EAJO,KAK3B1C,EAAWuB,cAiBjBoB,qBAAU,WACN3C,EAASD,QAEb,IAAOrB,EAAakE,aAAY,SAAAlC,GAAK,OAAIA,EAAMmC,YAAYnE,cAK3D,OACI,sBAAKqD,UAAW6B,IAAKI,QAArB,UAEI,qBAAKjC,UAAW6B,IAAKK,YAArB,SACI,mCAAM3C,EAAQxC,UAElB,uBAAOa,KAAK,SAASoC,UAAW6B,IAAKM,WAAY5B,QAV9B,WACvBtC,EL+E+C,CAACL,KAAMtB,EAAiB+C,iBK/E7C,WASyDc,MAAM,YAGrF,mBAAGY,KAAK,YAAR,SACI,qBAAKC,IAA0B,SAArBzB,EAAQzC,SAAqBd,EAAcuD,EAAQzC,SAAUkD,UAAW6B,IAAKO,IAAKnB,IAAI,OAEpG,sBAAKjB,UAAW6B,IAAKQ,WAArB,UACI,8BACkB,2CACN9C,EAAQvC,WAGpB,8BACC,gDACgBuC,EAAQtC,KAAKC,WAI9B,8BACoB,iDACFqC,EAAQtC,KAAKE,YAG/B,8BACA,4CACaoC,EAAQnC,eAMzB,sBAAK4C,UAAW6B,IAAK1C,QAArB,UACKI,EAAQlC,SAASwB,KAAI,SAACqC,EAAOC,GAAR,OAAkB,gCAAiB,sBAAMnB,UAAW6B,IAAK9D,aAAtB,SACpDmD,EAAO3D,cAD4B,IACR,uBAAMyC,UAAW6B,IAAKS,YAAtB,cAAqCpB,EAAO1D,QACxE,uBAAOwC,UAAW6B,IAAKpE,cAAe8C,QAAS,kBA3DjC5C,EA2D4DuD,EAAOrE,QA1D7FoB,EAASR,EAAc8B,EAAQ1C,GAAIc,IADvC,IAA8BA,GA2DwEC,KAAK,SACpFuC,MAAM,QAHiCgB,MAMlD,0BAAUhB,MAAOO,EAAmB9C,KAAK,OAAOwC,SAAU,SAACgB,GAAD,OAnEtE,SAA+BA,GAC3BT,EAAwBS,EAAEd,cAAcH,OAkEiCkB,CAAsBD,IAC7EpB,UAAW6B,IAAKU,eAE1B,uBAAO3E,KAAK,SAASuC,MAAM,aAAaI,QA9DpD,WACI,GAAIG,EAAmB,CACnB,IAAM5C,EAAQwD,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACnDxD,EAASJ,EAAWC,EAAOyB,EAAQ1C,GAAI6D,EAAmB,SAC1DC,EAAwB,MA0DgDX,UAAW6B,IAAKW,iBACpF,qBAAKxC,UAAW6B,IAAK5E,KAArB,SAA2B,+BAAKsC,EAAQtC,KAAK,GAAlB,iBAGbP,IAAfC,GACH,qBAAK+E,MAAO,CAACC,QAAShF,GAAtB,SACI,cAAC,EAAD,CAAmB4C,QAASA,UC1E7BuB,EAfK,WACf,IAAMlE,EAAYiE,aAAY,SAAAlC,GAAK,OAAEA,EAAMmC,YAAYlE,YAExD,OACI,sBAAKoD,UAAU,WAAf,UACKpD,EAASiC,KAAI,SAACU,EAAQ4B,GAAT,OACN,cAAC,EAAD,CAAa5B,QAASA,GAAc4B,MAEpC,cAAC,EAAD,CAAe5B,QAAS3C,EAAS,SCFtC6F,MARf,WACI,OACI,8BACI,cAAC,EAAD,OCKGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCFRQ,EAAcC,0BAAgB,CAEhCtC,YAAYuC,IAIHC,EAAQC,sBAAYJ,EAAYK,8BAAoBC,0BAAgBC,OCHjFC,IAASC,OACL,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,MAEFO,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.4d9d269c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addDisplay\":\"addProductItem_addDisplay__23Rf0\",\"btn_makeChange\":\"addProductItem_btn_makeChange__3ThjP\",\"oneItem\":\"addProductItem_oneItem__359ik\",\"ProductName\":\"addProductItem_ProductName__35D4r\",\"properties\":\"addProductItem_properties__17xjV\",\"commentValue\":\"addProductItem_commentValue__1h-tF\",\"deleteComment\":\"addProductItem_deleteComment__2vzsL\",\"commentDate\":\"addProductItem_commentDate__2LbrV\",\"coments\":\"addProductItem_coments__1jymF\",\"addComment\":\"addProductItem_addComment__1Axag\",\"btn_addComment\":\"addProductItem_btn_addComment__QIBxt\",\"editBotton\":\"addProductItem_editBotton__KeHry\"};","import {loadFullPageAPI} from \"../api/api\";\r\n\r\nexport const standardFoto = `https://i.pinimg.com/originals/0a/fc/9d/0afc9d628cf8fe5cf89d815799f672b7.jpg`\r\n\r\n\r\nconst DELETE_COMMENT = 'DELETE_COMMENT'\r\nconst ADD_COMMENT = 'ADD_COMMENT'\r\nconst CHANGEITEM = 'CHANGEITEM'\r\nconst ADD_ITEM = 'ADD_ITEM'\r\nconst CHANGE_DISPLAY = 'CHANGE_DISPLAY'\r\nconst ADD_ITEM_DISPLAY = 'ADD_ITEM_DISPLAY'\r\nconst PUT_FULL_PAGE = 'PUT_FULL_PAGE'\r\n\r\nconst defaultStatus = {\r\n    /* в залежності від id editDisplay */\r\n    editDisplay:undefined,\r\n    addDisplay:undefined,\r\n    products: [\r\n        {\r\n            id: 1,\r\n            imageUrl: standardFoto,\r\n            name: 'Product name',\r\n            count: 4,\r\n            size: {\r\n                width: 200,\r\n                height: 200\r\n            },\r\n            weight: '200g',\r\n            comments: [{\r\n                id: 16,\r\n                productId: 1,\r\n                description: 'some text hext',\r\n                date: '14:00 22.08.2021'\r\n            },\r\n                {\r\n                    id: 3,\r\n                    productId: 1,\r\n                    description: 'some text here',\r\n                    date: '14:00 22.08.2021'\r\n                }]\r\n        },\r\n    ]\r\n}\r\nconst ProductPageReducer = (state = defaultStatus, action) => {\r\n    switch (action.type) {\r\n        case PUT_FULL_PAGE:return {...state ,products: [...action.FullPage]}\r\n        case DELETE_COMMENT:\r\n\r\n             return {...state, products: [...state.products.map(item=>( item.id !== action.itemId\r\n                         ? item\r\n                         : {  id: item.id,\r\n                             imageUrl: item.imageUrl,\r\n                             name: item.name,\r\n                             count: item.count,\r\n                             size: item.size,\r\n                             weight: item.weight,\r\n                             comments: [...item.comments.filter(comment =>comment.id !==action.commentId)]}\r\n                 ))]}\r\n                 case ADD_COMMENT:\r\n             return {...state, products: [...state.products.map(item=>( item.id !== action.itemId\r\n                         ? item\r\n                         : {  id: item.id,\r\n                             imageUrl: item.imageUrl,\r\n                             name: item.name,\r\n                             count: item.count,\r\n                             size: item.size,\r\n                             weight: item.weight,\r\n                             comments: [...item.comments,{\r\n                                 id: action.newId,\r\n                                 productId: item.id,\r\n                                 description: action.commentValue,\r\n                                 date: action.date\r\n                             }]}\r\n                 ))]}\r\n        case CHANGEITEM:\r\n            return {...state ,editDisplay:undefined,products: [...state.products.map(item=>( item.id !== action.itemId\r\n                        ? item\r\n                        : {  id: item.id,\r\n                            imageUrl: action.imageUrl,\r\n                            name: action.nameValue,\r\n                            count: action.count,\r\n                            size: {...item.size, width: action.width,height:action.height},\r\n                            weight: action.weight,\r\n                            comments: [...item.comments,{\r\n                                id: action.newId,\r\n                                productId: item.id,\r\n                                description: action.commentValue,\r\n                                date: action.date\r\n                            }]}\r\n                ))]\r\n\r\n\r\n            }\r\n        case ADD_ITEM:\r\n            return {...state ,\r\n                addDisplay:undefined,\r\n                products:[ ...state.products,\r\n                    {id: action.payload.id,\r\n                         imageUrl: action.payload.imageUrl,\r\n                         name: action.payload.name,\r\n                        count: action.payload.count,\r\n                        size: action.payload.size,\r\n                        weight: action.payload.weight,\r\n                              comments: [...action.payload.coments]}]\r\n                // comments:[...action.]\r\n            }\r\n            case CHANGE_DISPLAY:return {...state ,editDisplay:action.change}\r\n            case ADD_ITEM_DISPLAY:return {...state ,addDisplay:action.changeAddDisplay}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const deleteComment = (itemId,commentId) => ({type: DELETE_COMMENT, itemId,commentId})\r\nexport const addComment = (newId,itemId,commentValue,date) => ({type: ADD_COMMENT,newId, itemId,commentValue,date})\r\nexport const changeItem = (itemId,imageUrl,nameValue,count,width,height,weight) => ({type: CHANGEITEM, itemId,imageUrl,nameValue,count,width,height,weight})\r\nexport const addItemItem = (payload) => ({type: ADD_ITEM, payload})\r\n\r\nexport const changeDisplay = (change) => ({type: CHANGE_DISPLAY,change })\r\nexport const changeAddDisplay = (changeAddDisplay) => ({type: ADD_ITEM_DISPLAY,changeAddDisplay })\r\n\r\n\r\n export const putFullPage = (FullPage) => ({type: PUT_FULL_PAGE,FullPage })\r\n\r\nexport const downloadFullPage = () => async (dispatch) => {\r\n    try {\r\n            let response = await loadFullPageAPI()\r\n            if (response.status === 200) {\r\n                dispatch(putFullPage(response.data.products))\r\n        } else {\r\n            console.log('trouble in get back downloadFullPage ')\r\n            return undefined\r\n        }\r\n    } catch (e) {\r\n        console.log('trouble in get back uploaded downloadFullPage', e)\r\n    }\r\n\r\n}\r\n\r\nexport default ProductPageReducer\r\n\r\n\r\n\r\n\r\n","import * as axios from \"axios\";\r\n\r\nexport const loadFullPageAPI =  ()=>{\r\n    return  axios.get(`https://run.mocky.io/v3/99ecb97a-1f0e-4f18-8c9c-fdcb7d84b2b8`,{})\r\n}","import React, {useState} from 'react';\r\nimport './editDisplay.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {changeItem} from \"../../redux/ProductPage_reducer\";\r\n\r\nconst EditDisplay = ({product}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [imageUrl, changeimageUrl] = useState(product.imageUrl)\r\n    const changeimageUrlHandler = (e) => {changeimageUrl(e.currentTarget.value)}\r\n\r\n\r\n    const [name, changenameValue] = useState(product.name)\r\n    const changechaNgenameValueHandler = (e) => {changenameValue(e.currentTarget.value)}\r\n\r\n\r\n    const [count, changecount] = useState(product.count)\r\n    const changeCountHandler = (e) => {changecount(e.currentTarget.value)}\r\n\r\n\r\n    const [width, changewidth] = useState(product.size.width)\r\n    const changeWidthHandler = (e) => {changewidth(e.currentTarget.value)}\r\n\r\n\r\n\r\n    const [height, changeheight] = useState(product.size.height)\r\n    const changeHeightHandler = (e) => {changeheight(e.currentTarget.value)}\r\n\r\n\r\n\r\n    const [weight, changeWeight] = useState(product.weight)\r\n    const changeWeightHandler = (e) => {changeWeight(e.currentTarget.value)}\r\n\r\n    const makeChangeHandler =() =>{\r\n\r\n            dispatch(changeItem(product.id, imageUrl,name,count,width,height,weight))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='editDisplay'>\r\n\r\n\r\n            <div>\r\n                <h5>imageUrl:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={imageUrl}\r\n                                             onChange={event => changeimageUrlHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <h5>name:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={name}\r\n                                             onChange={event => changechaNgenameValueHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <h5>count:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={count}\r\n                                             onChange={event => changeCountHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <h5>size.width:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={width}\r\n                                                    onChange={event => changeWidthHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <h5>size.height:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={height}\r\n                                                    onChange={event => changeHeightHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <h5>weight:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={weight}\r\n                                               onChange={event => changeWeightHandler(event)}/>\r\n            </div>\r\n                    <div>\r\n                        <button onClick={makeChangeHandler} className='btn_makeChange' > make change</button>\r\n                    </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditDisplay;","import React, {useEffect, useState} from 'react';\r\nimport './oneProduct.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addComment, changeDisplay, deleteComment, downloadFullPage} from \"../../redux/ProductPage_reducer\";\r\nimport EditDisplay from \"../editDisplay/editDisplay\";\r\nimport {standardFoto} from './../../redux/ProductPage_reducer'\r\n\r\nconst OneProduct = ({product}) => {\r\n\r\n\r\n\r\n    const [commentItputValue, ChangecommentItputValue] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    function changeCommnettHandler(e) {\r\n        ChangecommentItputValue(e.currentTarget.value)\r\n    }\r\n\r\n    function deleteCommentHandler(commentId) {\r\n        dispatch(deleteComment(product.id, commentId))\r\n    }\r\n\r\n    function addCommentHandler() {\r\n        if (commentItputValue) {\r\n            const newId = Math.random().toString(36).substring(3)\r\n            dispatch(addComment(newId, product.id, commentItputValue, 'time'))\r\n            ChangecommentItputValue('')\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(downloadFullPage())\r\n    })\r\n    const  editDisplay = useSelector(state => state.ProductPage.editDisplay)\r\n    const showeDisplayHandler =()=>{\r\n        dispatch(changeDisplay(product.id))\r\n    }\r\n\r\n    return (\r\n        <div className='oneItem'>\r\n            <div className='ProductName'>\r\n                <h2> {product.name}</h2>\r\n            </div>\r\n            <input type=\"button\" className=\"editBotton\" onClick={showeDisplayHandler} value='change'/>\r\n\r\n\r\n            <a href='some_href'>\r\n                <img src={product.imageUrl === 'foto'? standardFoto :product.imageUrl} className='img' alt=\"\"/>\r\n            </a>\r\n            <div className='properties'>\r\n                <div>\r\n                                  <span>\r\n                    count: {product.count}\r\n                </span>\r\n                </div>\r\n                <div>\r\n                 <span>\r\n                    size.width: {product.size.width}\r\n                </span>\r\n                </div>\r\n\r\n                <div>\r\n                                    <span>\r\n                    size.height: {product.size.height}\r\n                </span>\r\n                </div>\r\n                <div>\r\n                <span>\r\n                    weight: {product.weight}\r\n                </span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className='coments'>\r\n                {product.comments.map((coment,index) => <div key={index}><span className='commentValue'>\r\n                    {coment.description}</span> <span className='commentDate'> {coment.date}</span>\r\n                    <input className='deleteComment' onClick={() => deleteCommentHandler(coment.id)} type=\"button\"\r\n                           value='X'/></div>)}\r\n\r\n\r\n                <textarea value={commentItputValue} type=\"text\" onChange={(e) => changeCommnettHandler(e)}\r\n                          className='commentInput'/>\r\n\r\n                <input type=\"button\" value='addComment' onClick={addCommentHandler} className='btn_addComment'/>\r\n                <div className='size'><h1>{product.size[1]} </h1></div>\r\n\r\n            </div>\r\n            {  editDisplay === product.id &&\r\n            <div style={{display: editDisplay}} >\r\n                <EditDisplay product={product}  />\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OneProduct;","import React, {useState} from 'react';\r\nimport clas from './addProductItem.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addItemItem} from \"../../redux/ProductPage_reducer\";\r\n\r\nconst AddProductDIsplay = ({product}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [imageUrl, changeimageUrl] = useState(product.imageUrl)\r\n    const changeimageUrlHandler = (e) => {changeimageUrl(e.currentTarget.value)}\r\n\r\n\r\n    const [name, changenameValue] = useState(product.name)\r\n    const changechaNgenameValueHandler = (e) => {changenameValue(e.currentTarget.value)}\r\n\r\n\r\n    const [count, changecount] = useState(product.count)\r\n    const changeCountHandler = (e) => {changecount(e.currentTarget.value)}\r\n\r\n\r\n    const [width, changewidth] = useState(product.size.width)\r\n    const changeWidthHandler = (e) => {changewidth(e.currentTarget.value)}\r\n\r\n\r\n\r\n    const [height, changeheight] = useState(product.size.height)\r\n    const changeHeightHandler = (e) => {changeheight(e.currentTarget.value)}\r\n\r\n\r\n\r\n    const [weight, changeWeight] = useState(product.weight)\r\n    const changeWeightHandler = (e) => {changeWeight(e.currentTarget.value)}\r\n\r\n    const makeChangeHandler =() =>{\r\n        let id =Math.floor(Math.random() * 1221120)\r\n        let size = {width,height}\r\n        let coments = [{\r\n            id:id,\r\n            productId:id,\r\n            description: \"\",\r\n            date: 'new data'\r\n        }]\r\n        let payload={id, imageUrl,name,count,size,weight ,coments}\r\n        dispatch(addItemItem(payload))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={clas.addDisplay}>\r\naddDisplay\r\n\r\n            <div>\r\n                <h5>imageUrl:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={imageUrl}\r\n                                             onChange={event => changeimageUrlHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <h5>name:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={name}\r\n                                         onChange={event => changechaNgenameValueHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <h5>count:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={count}\r\n                                          onChange={event => changeCountHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <h5>size.width:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={width}\r\n                                               onChange={event => changeWidthHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <h5>size.height:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={height}\r\n                                                onChange={event => changeHeightHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <h5>weight:</h5> <textarea rows=\"4\" cols=\"50\" type=\"text\" value={weight}\r\n                                           onChange={event => changeWeightHandler(event)}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={makeChangeHandler} className='btn_makeChange' > make change</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProductDIsplay;","import React, {useEffect, useState} from 'react';\r\nimport clas from './addProductItem.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addComment,\r\n    changeAddDisplay,\r\n    deleteComment,\r\n    downloadFullPage\r\n} from \"../../redux/ProductPage_reducer\";\r\nimport {standardFoto} from './../../redux/ProductPage_reducer'\r\nimport AddProductDIsplay from \"./addProductItemDisplay\";\r\n\r\nconst AddOneProduct = ({product}) => {\r\n\r\n\r\n\r\n    const [commentItputValue, ChangecommentItputValue] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    function changeCommnettHandler(e) {\r\n        ChangecommentItputValue(e.currentTarget.value)\r\n    }\r\n\r\n    function deleteCommentHandler(commentId) {\r\n        dispatch(deleteComment(product.id, commentId))\r\n    }\r\n\r\n    function addCommentHandler() {\r\n        if (commentItputValue) {\r\n            const newId = Math.random().toString(36).substring(3)\r\n            dispatch(addComment(newId, product.id, commentItputValue, 'time'))\r\n            ChangecommentItputValue('')\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(downloadFullPage())\r\n    })\r\n    const  addDisplay = useSelector(state => state.ProductPage.addDisplay)\r\n    const showeDisplayHandler =()=>{\r\n        dispatch(changeAddDisplay('block'))\r\n    }\r\n\r\n    return (\r\n        <div className={clas.oneItem}>\r\n            {/*<span className={clas.bigPlus}>+</span>*/}\r\n            <div className={clas.ProductName}>\r\n                <h2> {product.name}</h2>\r\n            </div>\r\n            <input type=\"button\" className={clas.editBotton} onClick={showeDisplayHandler} value='addItem'/>\r\n\r\n\r\n            <a href='some_href'>\r\n                <img src={product.imageUrl === 'foto'? standardFoto :product.imageUrl} className={clas.img} alt=\"\"/>\r\n            </a>\r\n            <div className={clas.properties}>\r\n                <div>\r\n                                  <span>\r\n                    count: {product.count}\r\n                </span>\r\n                </div>\r\n                <div>\r\n                 <span>\r\n                    size.width: {product.size.width}\r\n                </span>\r\n                </div>\r\n\r\n                <div>\r\n                                    <span>\r\n                    size.height: {product.size.height}\r\n                </span>\r\n                </div>\r\n                <div>\r\n                <span>\r\n                    weight: {product.weight}\r\n                </span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={clas.coments}>\r\n                {product.comments.map((coment,index) => <div key={index}><span className={clas.commentValue}>\r\n                    {coment.description}</span> <span className={clas.commentDate}> {coment.date}</span>\r\n                    <input className={clas.deleteComment} onClick={() => deleteCommentHandler(coment.id)} type=\"button\"\r\n                           value='X'/></div>)}\r\n\r\n\r\n                <textarea value={commentItputValue} type=\"text\" onChange={(e) => changeCommnettHandler(e)}\r\n                          className={clas.commentInput}/>\r\n\r\n                <input type=\"button\" value='addComment' onClick={addCommentHandler} className={clas.btn_addComment}/>\r\n                <div className={clas.size}><h1>{product.size[1]} </h1></div>\r\n\r\n            </div>\r\n            {  addDisplay !== undefined &&\r\n            <div style={{display: addDisplay}} >\r\n                <AddProductDIsplay product={product}  />\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddOneProduct;","import React from 'react';\r\nimport './ProductPage.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport OneProduct from \"../OneProductPage/oneProduct\";\r\nimport AddOneProduct from \"../addProductItem/addProductItem\";\r\n\r\nconst ProductPage = () => {\r\n     const products  = useSelector(state=>state.ProductPage.products)\r\n\r\n    return (\r\n        <div className='fotoPage' >\r\n            {products.map((product,index) =>\r\n                    <OneProduct  product={product} key={index}/>\r\n                    )}\r\n                    <AddOneProduct product={products[0]}/>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ProductPage;","import './App.css';\nimport ProductPage from \"./components/productPage/ProductPage\";\nimport React from \"react\";\n\nfunction App() {\n    return (\n        <div>\n            <ProductPage/>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n import ProductPage_reducer from \"./ProductPage_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n\r\n    ProductPage:ProductPage_reducer,\r\n\r\n})\r\n\r\nexport const store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)) )","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}